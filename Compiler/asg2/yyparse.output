Terminals unused in grammar

   TOK_BLOCK
   TOK_CALL
   TOK_IFELSE
   TOK_INITDECL
   TOK_POS
   TOK_NEG
   TOK_NEWARRAY
   TOK_TYPEID
   TOK_FIELD


Rules useless in parser due to conflicts

   27 token: /* empty */


State 1 conflicts: 54 shift/reduce


Grammar

    0 $accept: program $end

    1 program: program token
    2        | /* empty */

    3 token: '('
    4      | ')'
    5      | '['
    6      | ']'
    7      | '{'
    8      | '}'
    9      | ';'
   10      | ','
   11      | '.'
   12      | '='
   13      | '+'
   14      | '-'
   15      | '*'
   16      | '/'
   17      | '%'
   18      | '!'
   19      | ':'
   20      | '^'
   21      | '|'
   22      | '?'
   23      | '&'
   24      | '\\'
   25      | '\''
   26      | '"'
   27      | /* empty */
   28      | TOK_VOID
   29      | TOK_BOOL
   30      | TOK_CHAR
   31      | TOK_INT
   32      | TOK_STRING
   33      | TOK_IF
   34      | TOK_ELSE
   35      | TOK_WHILE
   36      | TOK_RETURN
   37      | TOK_STRUCT
   38      | TOK_FALSE
   39      | TOK_TRUE
   40      | TOK_NULL
   41      | TOK_NEW
   42      | TOK_ARRAY
   43      | TOK_EQ
   44      | TOK_NE
   45      | TOK_LT
   46      | TOK_LE
   47      | TOK_GT
   48      | TOK_GE
   49      | TOK_IDENT
   50      | TOK_INTCON
   51      | TOK_CHARCON
   52      | TOK_STRINGCON
   53      | TOK_ORD
   54      | TOK_CHR
   55      | TOK_ROOT
   56      | TOK_NUMBER


Terminals, with rules where they appear

$end (0) 0
'!' (33) 18
'"' (34) 26
'%' (37) 17
'&' (38) 23
'\'' (39) 25
'(' (40) 3
')' (41) 4
'*' (42) 15
'+' (43) 13
',' (44) 10
'-' (45) 14
'.' (46) 11
'/' (47) 16
':' (58) 19
';' (59) 9
'=' (61) 12
'?' (63) 22
'[' (91) 5
'\\' (92) 24
']' (93) 6
'^' (94) 20
'{' (123) 7
'|' (124) 21
'}' (125) 8
error (256)
TOK_NUMBER (258) 56
TOK_VOID (259) 28
TOK_BOOL (260) 29
TOK_CHAR (261) 30
TOK_INT (262) 31
TOK_STRING (263) 32
TOK_IF (264) 33
TOK_ELSE (265) 34
TOK_WHILE (266) 35
TOK_RETURN (267) 36
TOK_STRUCT (268) 37
TOK_FALSE (269) 38
TOK_TRUE (270) 39
TOK_NULL (271) 40
TOK_NEW (272) 41
TOK_ARRAY (273) 42
TOK_EQ (274) 43
TOK_NE (275) 44
TOK_LT (276) 45
TOK_LE (277) 46
TOK_GT (278) 47
TOK_GE (279) 48
TOK_IDENT (280) 49
TOK_INTCON (281) 50
TOK_CHARCON (282) 51
TOK_STRINGCON (283) 52
TOK_BLOCK (284)
TOK_CALL (285)
TOK_IFELSE (286)
TOK_INITDECL (287)
TOK_POS (288)
TOK_NEG (289)
TOK_NEWARRAY (290)
TOK_TYPEID (291)
TOK_FIELD (292)
TOK_ORD (293) 53
TOK_CHR (294) 54
TOK_ROOT (295) 55


Nonterminals, with rules where they appear

$accept (65)
    on left: 0
program (66)
    on left: 1 2, on right: 0 1
token (67)
    on left: 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
    24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44
    45 46 47 48 49 50 51 52 53 54 55 56, on right: 1


state 0

    0 $accept: . program $end

    $default  reduce using rule 2 (program)

    program  go to state 1


state 1

    0 $accept: program . $end
    1 program: program . token

    $end           shift, and go to state 2
    TOK_NUMBER     shift, and go to state 3
    TOK_VOID       shift, and go to state 4
    TOK_BOOL       shift, and go to state 5
    TOK_CHAR       shift, and go to state 6
    TOK_INT        shift, and go to state 7
    TOK_STRING     shift, and go to state 8
    TOK_IF         shift, and go to state 9
    TOK_ELSE       shift, and go to state 10
    TOK_WHILE      shift, and go to state 11
    TOK_RETURN     shift, and go to state 12
    TOK_STRUCT     shift, and go to state 13
    TOK_FALSE      shift, and go to state 14
    TOK_TRUE       shift, and go to state 15
    TOK_NULL       shift, and go to state 16
    TOK_NEW        shift, and go to state 17
    TOK_ARRAY      shift, and go to state 18
    TOK_EQ         shift, and go to state 19
    TOK_NE         shift, and go to state 20
    TOK_LT         shift, and go to state 21
    TOK_LE         shift, and go to state 22
    TOK_GT         shift, and go to state 23
    TOK_GE         shift, and go to state 24
    TOK_IDENT      shift, and go to state 25
    TOK_INTCON     shift, and go to state 26
    TOK_CHARCON    shift, and go to state 27
    TOK_STRINGCON  shift, and go to state 28
    TOK_ORD        shift, and go to state 29
    TOK_CHR        shift, and go to state 30
    TOK_ROOT       shift, and go to state 31
    '='            shift, and go to state 32
    '+'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '/'            shift, and go to state 36
    '^'            shift, and go to state 37
    '('            shift, and go to state 38
    ')'            shift, and go to state 39
    '['            shift, and go to state 40
    ']'            shift, and go to state 41
    '{'            shift, and go to state 42
    '}'            shift, and go to state 43
    ';'            shift, and go to state 44
    ','            shift, and go to state 45
    '.'            shift, and go to state 46
    '%'            shift, and go to state 47
    '!'            shift, and go to state 48
    ':'            shift, and go to state 49
    '|'            shift, and go to state 50
    '?'            shift, and go to state 51
    '&'            shift, and go to state 52
    '\\'           shift, and go to state 53
    '\''           shift, and go to state 54
    '"'            shift, and go to state 55

    $end           [reduce using rule 27 (token)]
    TOK_NUMBER     [reduce using rule 27 (token)]
    TOK_VOID       [reduce using rule 27 (token)]
    TOK_BOOL       [reduce using rule 27 (token)]
    TOK_CHAR       [reduce using rule 27 (token)]
    TOK_INT        [reduce using rule 27 (token)]
    TOK_STRING     [reduce using rule 27 (token)]
    TOK_IF         [reduce using rule 27 (token)]
    TOK_ELSE       [reduce using rule 27 (token)]
    TOK_WHILE      [reduce using rule 27 (token)]
    TOK_RETURN     [reduce using rule 27 (token)]
    TOK_STRUCT     [reduce using rule 27 (token)]
    TOK_FALSE      [reduce using rule 27 (token)]
    TOK_TRUE       [reduce using rule 27 (token)]
    TOK_NULL       [reduce using rule 27 (token)]
    TOK_NEW        [reduce using rule 27 (token)]
    TOK_ARRAY      [reduce using rule 27 (token)]
    TOK_EQ         [reduce using rule 27 (token)]
    TOK_NE         [reduce using rule 27 (token)]
    TOK_LT         [reduce using rule 27 (token)]
    TOK_LE         [reduce using rule 27 (token)]
    TOK_GT         [reduce using rule 27 (token)]
    TOK_GE         [reduce using rule 27 (token)]
    TOK_IDENT      [reduce using rule 27 (token)]
    TOK_INTCON     [reduce using rule 27 (token)]
    TOK_CHARCON    [reduce using rule 27 (token)]
    TOK_STRINGCON  [reduce using rule 27 (token)]
    TOK_ORD        [reduce using rule 27 (token)]
    TOK_CHR        [reduce using rule 27 (token)]
    TOK_ROOT       [reduce using rule 27 (token)]
    '='            [reduce using rule 27 (token)]
    '+'            [reduce using rule 27 (token)]
    '-'            [reduce using rule 27 (token)]
    '*'            [reduce using rule 27 (token)]
    '/'            [reduce using rule 27 (token)]
    '^'            [reduce using rule 27 (token)]
    '('            [reduce using rule 27 (token)]
    ')'            [reduce using rule 27 (token)]
    '['            [reduce using rule 27 (token)]
    ']'            [reduce using rule 27 (token)]
    '{'            [reduce using rule 27 (token)]
    '}'            [reduce using rule 27 (token)]
    ';'            [reduce using rule 27 (token)]
    ','            [reduce using rule 27 (token)]
    '.'            [reduce using rule 27 (token)]
    '%'            [reduce using rule 27 (token)]
    '!'            [reduce using rule 27 (token)]
    ':'            [reduce using rule 27 (token)]
    '|'            [reduce using rule 27 (token)]
    '?'            [reduce using rule 27 (token)]
    '&'            [reduce using rule 27 (token)]
    '\\'           [reduce using rule 27 (token)]
    '\''           [reduce using rule 27 (token)]
    '"'            [reduce using rule 27 (token)]

    token  go to state 56


state 2

    0 $accept: program $end .

    $default  accept


state 3

   56 token: TOK_NUMBER .

    $default  reduce using rule 56 (token)


state 4

   28 token: TOK_VOID .

    $default  reduce using rule 28 (token)


state 5

   29 token: TOK_BOOL .

    $default  reduce using rule 29 (token)


state 6

   30 token: TOK_CHAR .

    $default  reduce using rule 30 (token)


state 7

   31 token: TOK_INT .

    $default  reduce using rule 31 (token)


state 8

   32 token: TOK_STRING .

    $default  reduce using rule 32 (token)


state 9

   33 token: TOK_IF .

    $default  reduce using rule 33 (token)


state 10

   34 token: TOK_ELSE .

    $default  reduce using rule 34 (token)


state 11

   35 token: TOK_WHILE .

    $default  reduce using rule 35 (token)


state 12

   36 token: TOK_RETURN .

    $default  reduce using rule 36 (token)


state 13

   37 token: TOK_STRUCT .

    $default  reduce using rule 37 (token)


state 14

   38 token: TOK_FALSE .

    $default  reduce using rule 38 (token)


state 15

   39 token: TOK_TRUE .

    $default  reduce using rule 39 (token)


state 16

   40 token: TOK_NULL .

    $default  reduce using rule 40 (token)


state 17

   41 token: TOK_NEW .

    $default  reduce using rule 41 (token)


state 18

   42 token: TOK_ARRAY .

    $default  reduce using rule 42 (token)


state 19

   43 token: TOK_EQ .

    $default  reduce using rule 43 (token)


state 20

   44 token: TOK_NE .

    $default  reduce using rule 44 (token)


state 21

   45 token: TOK_LT .

    $default  reduce using rule 45 (token)


state 22

   46 token: TOK_LE .

    $default  reduce using rule 46 (token)


state 23

   47 token: TOK_GT .

    $default  reduce using rule 47 (token)


state 24

   48 token: TOK_GE .

    $default  reduce using rule 48 (token)


state 25

   49 token: TOK_IDENT .

    $default  reduce using rule 49 (token)


state 26

   50 token: TOK_INTCON .

    $default  reduce using rule 50 (token)


state 27

   51 token: TOK_CHARCON .

    $default  reduce using rule 51 (token)


state 28

   52 token: TOK_STRINGCON .

    $default  reduce using rule 52 (token)


state 29

   53 token: TOK_ORD .

    $default  reduce using rule 53 (token)


state 30

   54 token: TOK_CHR .

    $default  reduce using rule 54 (token)


state 31

   55 token: TOK_ROOT .

    $default  reduce using rule 55 (token)


state 32

   12 token: '=' .

    $default  reduce using rule 12 (token)


state 33

   13 token: '+' .

    $default  reduce using rule 13 (token)


state 34

   14 token: '-' .

    $default  reduce using rule 14 (token)


state 35

   15 token: '*' .

    $default  reduce using rule 15 (token)


state 36

   16 token: '/' .

    $default  reduce using rule 16 (token)


state 37

   20 token: '^' .

    $default  reduce using rule 20 (token)


state 38

    3 token: '(' .

    $default  reduce using rule 3 (token)


state 39

    4 token: ')' .

    $default  reduce using rule 4 (token)


state 40

    5 token: '[' .

    $default  reduce using rule 5 (token)


state 41

    6 token: ']' .

    $default  reduce using rule 6 (token)


state 42

    7 token: '{' .

    $default  reduce using rule 7 (token)


state 43

    8 token: '}' .

    $default  reduce using rule 8 (token)


state 44

    9 token: ';' .

    $default  reduce using rule 9 (token)


state 45

   10 token: ',' .

    $default  reduce using rule 10 (token)


state 46

   11 token: '.' .

    $default  reduce using rule 11 (token)


state 47

   17 token: '%' .

    $default  reduce using rule 17 (token)


state 48

   18 token: '!' .

    $default  reduce using rule 18 (token)


state 49

   19 token: ':' .

    $default  reduce using rule 19 (token)


state 50

   21 token: '|' .

    $default  reduce using rule 21 (token)


state 51

   22 token: '?' .

    $default  reduce using rule 22 (token)


state 52

   23 token: '&' .

    $default  reduce using rule 23 (token)


state 53

   24 token: '\\' .

    $default  reduce using rule 24 (token)


state 54

   25 token: '\'' .

    $default  reduce using rule 25 (token)


state 55

   26 token: '"' .

    $default  reduce using rule 26 (token)


state 56

    1 program: program token .

    $default  reduce using rule 1 (program)
